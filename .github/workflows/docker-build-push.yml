# .github/workflows/docker-build-push.yml
name: Docker Compose CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    environment: AIML_PROD

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create .env
        run:
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env |
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env |
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env |
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env |
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env |
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env |
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env |
          echo "DOCKER_REPO=${{ vars.DOCKER_REPO }}" >> .env |
          echo "MAX_MEMORY=${{ vars.MAX_MEMORY }}" >> .env |
          echo "DDL_PROPERTY=${{ vars.DDL_PROPERTY }}" >> .env
        shell: bash

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_AIML_USERNAME }}
          password: ${{ secrets.DOCKER_AIML_ACCESS_TOKEN }}

      - name: Build containers
        run: docker compose -f docker-compose.prod.yml build

      # - name: Run containers
      #   run: docker compose -f docker-compose.prod.yml up -d

      - name: Wait for services
        run: sleep 10

      # - name: Check services
      #   run: docker compose ps -a

      # - name: Stop containers
      #   run: docker compose down

      # Optional: Push images to Docker Hub
      - name: Push images to Docker Hub
        run: docker compose -f docker-compose.prod.yml push
